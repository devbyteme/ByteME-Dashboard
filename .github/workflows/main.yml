name: Build, Push & Deploy

on:
  push:
    branches:
      - main
      - Production

jobs:
  build-and-push:
    runs-on: ubuntu-latest

  
    environment: ${{ github.ref_name == 'main' && 'development' || github.ref_name == 'production' && 'production' }}

    env:
      REGISTRY: ghcr.io
      TIMESTAMP: ${{ github.run_number }}-${{ github.sha }}
      # ðŸ‘‡ Dynamically set image name based on branch
      IMAGE: ${{ github.ref_name == 'main' && 'ghcr.io/devbyteme/byteme-dashboard' || github.ref_name == 'production' && 'ghcr.io/devbyteme/byteme-dashboard-prod' }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push image
        run: |
          echo "ðŸš€ Building for branch: ${{ github.ref_name }}"
          echo "ðŸ§© Image name: ${{ env.IMAGE }}"

          docker build \
            --build-arg VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }} \
            -t ${{ env.IMAGE }}:${{ env.TIMESTAMP }} \
            -t ${{ env.IMAGE }}:latest .

          docker push ${{ env.IMAGE }}:${{ env.TIMESTAMP }}
          docker push ${{ env.IMAGE }}:latest

      - name: Set image tag output for deploy
        id: image
        run: echo "image_tag=${{ env.TIMESTAMP }}" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    environment: ${{ github.ref_name == 'main' && 'development' || github.ref_name == 'production' && 'production' }}

    env:
      # ðŸ‘‡ Match the same dynamic image logic
      IMAGE: ${{ github.ref_name == 'main' && 'ghcr.io/devbyteme/byteme-dashboard' || github.ref_name == 'production' && 'ghcr.io/devbyteme/byteme-dashboard-prod' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" | tr -d '\r' > ~/.ssh/ec2-key.pem
          chmod 600 ~/.ssh/ec2-key.pem
          ssh-keyscan -H ${{ secrets.PUBLIC_DNS }} >> ~/.ssh/known_hosts

      - name: Run deployment script on EC2
        run: |
          echo "ðŸ”§ Deploying image: ${{ env.IMAGE }}"
          ssh -i ~/.ssh/ec2-key.pem ${{ secrets.SERVER_USER }}@${{ secrets.PUBLIC_DNS }} "cd /var/www/byteme/dashboard && ./deploy.sh"
