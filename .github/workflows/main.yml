name: build and push

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      IMAGE: ghcr.io/devbyteme/byteme-dashboard
      
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Write Secret to File
        run: echo "${{ secrets.ENVSECRET }}" > .env
      
      - name: Build and push image
        run: |
          docker build -t ${{ env.IMAGE }}:latest .
          docker push ${{ env.IMAGE }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2-key.pem
          chmod 600 ~/.ssh/ec2-key.pem
          ssh-keyscan -H ${{ secrets.PUBLIC_DNS }} >> ~/.ssh/known_hosts

      - name: Run deployment script on EC2
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_PAT }}
        run: |
          ssh -i ~/.ssh/ec2-key.pem ${{ secrets.SERVER_USER }}@${{ secrets.PUBLIC_DNS }} "cd /var/www/byteme/dashboard && ./deploy.sh"


  cleanup-latest:
    runs-on: ubuntu-latest
    needs: deploy
    permissions:
      packages: write
    steps:
      - name: Wait a minutes before deleting 'latest'
        run: sleep 60
      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Delete 'latest' image tag from GHCR
        run: |
          
          gh api /users/devbyteme/packages/container/bbyteme-dashboard/versions \
            --jq '.[] | select(.metadata.container.tags | index("latest")) | .id' > version_id.txt

          if [ -s version_id.txt ]; then
            version_id=$(cat version_id.txt)
            echo " Deleting version ID: $version_id"
            gh api -X DELETE /users/devbyteme/packages/container/byteme-dashboard/versions/$version_id
          else
            echo "No 'latest' tag found to delete."
          fi
        env:
          GH_TOKEN: ${{ secrets.GHCR_PAT }}
