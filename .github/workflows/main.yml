name: Build, Push & Deploy

on:
  push:
    branches:
      - main
      - Production

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      # Different images for different branches
      IMAGE: ${{ github.ref == 'refs/heads/Production' && 'ghcr.io/devbyteme/byteme-dashboard-prod' || 'ghcr.io/devbyteme/byteme-dashboard-dev' }}
      TIMESTAMP: ${{ github.run_number }}-${{ github.sha }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push image
        run: |
          # Use VITE_API_BASE_URL for both branches (shared secret)
          docker build \
            --build-arg VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }} \
            -t ${{ env.IMAGE }}:${{ env.TIMESTAMP }} \
            -t ${{ env.IMAGE }}:latest .

          docker push ${{ env.IMAGE }}:${{ env.TIMESTAMP }}
          docker push ${{ env.IMAGE }}:latest

      - name: Set image tag output for deploy
        id: image
        run: echo "image_tag=${{ env.TIMESTAMP }}" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    
    env:
      IMAGE: ${{ github.ref == 'refs/heads/Production' && 'ghcr.io/devbyteme/byteme-dashboard-prod' || 'ghcr.io/devbyteme/byteme-dashboard-dev' }}
      GHCR_TOKEN: ${{ secrets.GHCR_PAT }}
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          # Use different SSH keys and DNS based on branch
          if [ "${{ github.ref }}" == "refs/heads/Production" ]; then
            echo "${{ secrets.EC2_SSH_KEY_PROD }}" | tr -d '\r' > ~/.ssh/ec2-key.pem
            chmod 600 ~/.ssh/ec2-key.pem
            ssh-keyscan -H ${{ secrets.PUBLIC_DNS_PROD }} >> ~/.ssh/known_hosts
          else
            echo "${{ secrets.EC2_SSH_KEY }}" | tr -d '\r' > ~/.ssh/ec2-key.pem
            chmod 600 ~/.ssh/ec2-key.pem
            ssh-keyscan -H ${{ secrets.PUBLIC_DNS }} >> ~/.ssh/known_hosts
          fi
  
      - name: Run deployment script on EC2
        run: |
          # Deploy to different servers based on branch
          if [ "${{ github.ref }}" == "refs/heads/Production" ]; then
            ssh -i ~/.ssh/ec2-key.pem SERVER_USER@${{ secrets.PUBLIC_DNS_PROD }} "cd /var/www/byteme/dashboard && ./deploy.sh"
          else
            ssh -i ~/.ssh/ec2-key.pem SERVER_USER@${{ secrets.PUBLIC_DNS }} "cd /var/www/byteme/dashboard && ./deploy.sh"
          fi
